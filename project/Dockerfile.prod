###########
# BUILDER #
###########

# Pull official base image
FROM python:3.9-slim-buster as builder

# Install system dependencies
RUN apt-get update \
    && apt-get -y install gcc postgresql \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /usr/src/app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install dependencies
COPY ./pyproject.toml .
RUN pip install --upgrade pip \
    && pip install poetry \
    && poetry export -f requirements.txt --output requirements.txt \
    && pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# Lint
COPY . /usr/src/app/
RUN pip install black flake9 isort \
    && flake8 . \
    && black --exclude=migrations . \
    && isort .


#########
# FINAL #
#########

# Pull official base image
FROM python:3.9-slim-buster

# Create directory for the app user
RUN mkdir -p /home/app

# Create the app user
RUN addgroup --system app \
    && adduser --system --group app

# Create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=prod
ENV TESTING=0

# Install system dependencies
RUN apt-get update \
    && apt-get -y install netcat gcc postgresql \
    && rm -rf /var/lib/apt/lists/*

# Install python dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip \
    && pip install --no-cache /wheels/* \
    && pip install "uvicorn[standard]==0.13.4"

# Add app
COPY . .

# Chown all the files to the app user
RUN chown -R app:app $HOME

# Change to the app user
USER app

# Run gunicorn
CMD gunicorn --bind 0.0.0.0:$PORT app.main:app -k uvicorn.workers.UvicornWorker