version: '3.8'

services:
  redis:
    image: redis:7-alpine

  rabbitmq:
    image: rabbitmq:3.10-management

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  web:
    build: .
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
      - SECRET_KEY=697be90749590b29ad92e0f8b5a0e7d11cf895403af9858ba7813bd51aac5795
      # - DATABASE_URL=<replace_it_with_your_database_url>
      # - DATABASE_TEST_URL=<replace_it_with_your_database_test_url>
      # - BROKER_URL=<replace_it_with_your_rabbitmq_url>
      # - RESULT_BACKEND=<replace_it_with_your_redis_url>
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - rabbitmq
      - db
    command: gunicorn -b 0.0.0.0 -k uvicorn.workers.UvicornWorker app.main:app

  worker:
    build: .
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
      - SECRET_KEY=697be90749590b29ad92e0f8b5a0e7d11cf895403af9858ba7813bd51aac5795
      # - DATABASE_URL=<replace_it_with_your_database_url>
      # - DATABASE_TEST_URL=<replace_it_with_your_database_test_url>
      # - BROKER_URL=<replace_it_with_your_rabbitmq_url>
      # - RESULT_BACKEND=<replace_it_with_your_redis_url>
    volumes:
      - .:/code
    depends_on:
      - web
    command: ./scripts/wait-for-it.sh -t 5 amqp://rabbitmq -- celery -A app.background.worker worker --without-heartbeat --without-gossip --without-mingle -l INFO

volumes:
  postgresql_data: null
